#!/usr/bin/env python
PACKAGE = "ufomap_mapping"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#           Name                 Type      Level Description                                            Default Min  Max
gen.add("frame_id",              str_t,    1,    "Frame id",                                            "map")

gen.add("max_range",             double_t, 2,    "Max range (m) when integrating data into map",        7.0,    0.0, 400.0)

gen.add("insert_discrete",       bool_t,   3,    "Enable discrete integration",                         True)
gen.add("insert_depth",          int_t,    3,    "Integration depth of the octree",                     0,      0,   10)
gen.add("insert_n",              int_t,    3,    "The n in integration for UFOMap, 0 or 2 recommended", 0,      0,   10)
gen.add("clear_robot",           bool_t,   3,    "Clear map at robot position",                         True)

gen.add("robot_height",          double_t, 4,    "Robot height (m)",                                    0.2,    0.0, 100.0)
gen.add("robot_radius",          double_t, 4,    "Robot radius (m)",                                    0.5,    0.0, 100.0)

gen.add("pub_rate",              double_t, 5,    "How often to publish map (/s)",                       1.0,    0.0, 100.0)

gen.add("transform_timeout",     double_t, 6,    "How long to wait for transform (s)",                  0.1,    0.0, 100.0)

gen.add("cloud_in_queue_size",   int_t,    7,    "Queue size for cloud_in",                             10,     0,   10000)
gen.add("map_queue_size",        int_t,    7,    "Queue size for map",                                  1,      0,   10000)
gen.add("map_binary_queue_size", int_t,    7,    "Queue size for map_binary",                           1,      0,   10000)
gen.add("map_cloud_queue_size",  int_t,    7,    "Queue size for map_cloud",                            1,      0,   10000)

gen.add("map_latch",             bool_t,   8,    "Enable latched map topic",                            False)
gen.add("map_binary_latch",      bool_t,   8,    "Enable latched map binary topic",                     False)
gen.add("map_cloud_latch",       bool_t,   8,    "Enable latched map cloud topic",                      False)

exit(gen.generate(PACKAGE, "ufomap_mapping", "Server"))
